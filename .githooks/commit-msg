#!/bin/sh
#
# An example hook script to check the commit log message.
# Called by "git commit" with one argument, the name of the file
# that has the commit message.  The hook should exit with non-zero
# status after issuing an appropriate message if it wants to stop the
# commit.  The hook is allowed to edit the commit message file.
#
# To enable this hook, rename this file to "commit-msg".

# Uncomment the below to add a Signed-off-by line to the message.
# Doing this in a hook is a bad idea in general, but the prepare-commit-msg
# hook is more suited to it.
#
# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\(.*>\).*$/Signed-off-by: \1/p')
# grep -qs "^$SOB" "$1" || echo "$SOB" >> "$1"

# This example catches duplicate Signed-off-by lines.

echo "Checking commit-message format..."

#TEMPORARY_FILE_PATH=$1

#COMMIT_MSG=`head -n1 $TEMPORARY_FILE_PATH`

#REGEX="^\[fix\]+$"

#if ! [[ "$COMMIT_MSG" =~ $REGEX ]];then
#	echo "Your commit-message format is not valid:\n$COMMIT_MSG\n"
#	echo "Valid format examples:"
#	echo "[fix] My commit message"
#	echo "[feat] My commit message"
#	exit 1
#else
#	echo "Well done! Your commit-message is valid."
#	exit 0
#fi
